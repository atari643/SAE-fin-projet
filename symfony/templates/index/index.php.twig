{% extends './utils/paging.html.twig' %}

{% block title %}Series
{% endblock %}

{% block stylesheets %}
<link rel="stylesheet"
href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
<link rel="stylesheet" href="/style.css" />

{% endblock %}
{% block header %}
    <header>
        <div class="caroussel">
            <div class="carousselChild">
                {% for s in pagination %}
                <div class="carousselChildSeries" data-id="{{s.id}}" data-title="{{ s.title }}" >
                    <img src="{{ path('app_series_poster', { 'id': s.id }) }}" alt="" class="affiche">
                </div>
                {% endfor %}
            </div>
        </div>
        <h1>Vision Vibes</h1>
        <div class="advanced-search">
            <form action="{{ path('app_default') }}#show" method="get">
                <input type="text" name="search" id="search" placeholder="Search for a series" />
                <select name="genre" id="genre">
                    <option value="">All genres</option>
                    {% for genre in genres %}
                        <option value="{{ genre.id }}">{{ genre.name }}</option>
                    {% endfor %}
                </select>
                <button type="submit" class="material-symbols-outlined">search</button>
            </form>
        </div>
    </header>
    {% endblock %}
{% block body %}

{% if is_granted('IS_IMPERSONATOR') %}
    <a href="{{ impersonation_exit_path(path('app_login') ) }}">Exit impersonation</a>
{% endif %}
    
    <div id="show">
        {% for s in pagination %}
            <div class="showChildSeries" data-id="{{s.id}}" data-title="{{ s.title }}" data-épisodes="{{ s.season_count }} Seasons | {{ s.episode_count }} Episodes" data-avis="4" data-resum="{{s.plot}}">
                <img src="{{ path('app_series_poster', { 'id': s.id }) }}" alt="" class="posters">
            </div>
        {% endfor %}
    </div>

    {{ block('paging') }}
    
    <script>
        window.addEventListener('load', makeScript());
        page=document.querySelectorAll('.pagination a');
        for(let i=0;i<page.length;i++){
            page[i].addEventListener('click',makeScript())
        
        }
function makeScript(){
const series = document.getElementsByClassName('showChildSeries');
const seriesPoster = document.getElementsByClassName('posters');
for (let i = 0; i < series.length; i++) {
seriesPoster[i].addEventListener('mouseover', function () {
posterHover(i);
});
seriesPoster[i].addEventListener('mouseleave', function () {
const overlay = series[i].querySelector('.overlay');
if (overlay) {
overlay.parentNode.removeChild(overlay);
}
});
seriesPoster[i].addEventListener('click', function () {
if (document.querySelector('.banner')) {
document.body.removeChild(document.querySelector('.banner'));
document.getElementById('show').style.width = '100%';
document.getElementById('show').style.marginRight = '0';
}
makeBannerLeft(series[i], seriesPoster[i]);
});

}


function posterHover(i) {
const overlay = document.createElement('div');
overlay.classList.add('overlay');
series[i].appendChild(overlay);
const title = document.createElement('p');
title.classList.add('titlePosterHover');
title.innerHTML = series[i].dataset.title;
overlay.appendChild(title);
const duration = document.createElement('p');
duration.classList.add('durationPosterHover');
if (series[i].dataset.duration != null) {
duration.innerHTML = series[i].dataset.duration;
} else if (series[i].dataset.épisodes != null) {
duration.innerHTML = series[i].dataset.épisodes;
} else {
duration.innerHTML = 'Pas de durée estimée';
} overlay.appendChild(duration);
const parentStars = document.createElement('div');
parentStars.classList.add('parentStarsPosterHover');
for (let j = 0; j < series[i].dataset.avis; j++) {
parentStars.innerHTML += '<span class="material-symbols-outlined">grade</span>';
}
for (let j = 0; j < 5 - series[i].dataset.avis; j++) {
parentStars.innerHTML += '<span class="material-symbols-outlined">grade</span>';
parentStars.lastChild.style.color = '#e3f7f5';
}
overlay.appendChild(parentStars);
overlay.style.width = seriesPoster[i].width + 'px';
overlay.style.transform = 'translateY(' + (
seriesPoster[i].offsetHeight - overlay.offsetHeight + Math.round(overlay.offsetHeight * 0.08)
) + 'px) translateX(' + (
seriesPoster[i].offsetLeft - overlay.offsetLeft + 1
) + 'px) scale(1.08)';
}
}
function makeBannerLeft(poster, posterImg) {
const banner = document.createElement('div');
banner.classList.add('banner');
banner.style.height = window.innerHeight - document.getElementById('show').offsetTop + scrollY + 'px';
window.addEventListener('scroll', function () {
banner.style.height = window.innerHeight - document.getElementById('show').offsetTop + scrollY + 'px';
if (banner.offsetHeight >= window.innerHeight) {
banner.style.borderTopLeftRadius = '0';
} else {
banner.style.borderTopLeftRadius = '15px';
}
});
const bannerClose = document.createElement('div');
bannerClose.classList.add('bannerClose');
bannerClose.innerHTML = '<span class="material-symbols-outlined">cancel</span>';
banner.appendChild(bannerClose);
const headerBanner = document.createElement('div');
headerBanner.classList.add('headerBanner');
const bannerTitle = document.createElement('p');
bannerTitle.classList.add('bannerTitle');
bannerTitle.innerHTML = poster.dataset.title;
headerBanner.appendChild(bannerTitle);
const bannerButtonMore = document.createElement('button');
bannerButtonMore.classList.add('bannerButtonMore');
bannerButtonMore.onclick = () => {
window.location.href = "/series/" + poster.dataset.id;
};
bannerButtonMore.innerHTML = 'En savoir +';
headerBanner.appendChild(bannerButtonMore);
banner.appendChild(headerBanner);
const bannerImg = document.createElement('img');
bannerImg.src = posterImg.src;
bannerImg.classList.add('bannerImg');
banner.appendChild(bannerImg);
const resumé = document.createElement('p');
resumé.classList.add('resumé');
resumé.innerHTML = poster.dataset.resum;
banner.appendChild(resumé);
const parentBottomBanner = document.createElement('div');
parentBottomBanner.classList.add('parentBottomBanner');
banner.appendChild(parentBottomBanner);
const bannerDuration = document.createElement('p');
bannerDuration.classList.add('bannerDuration');
if (poster.dataset.duration != null) {
bannerDuration.innerHTML = poster.dataset.duration;
} else if (poster.dataset.épisodes != null) {
bannerDuration.innerHTML = poster.dataset.épisodes;
} else {
bannerDuration.innerHTML = 'Pas de durée estimée';
} parentBottomBanner.appendChild(bannerDuration);
const bannerParentStars = document.createElement('div');
bannerParentStars.classList.add('bannerParentStars');
for (let j = 0; j < poster.dataset.avis; j++) {
bannerParentStars.innerHTML += '<span class="material-symbols-outlined">grade</span>';
}
for (let j = 0; j < 5 - poster.dataset.avis; j++) {
bannerParentStars.innerHTML += '<span class="material-symbols-outlined">grade</span>';
bannerParentStars.lastChild.style.color = '#e3f7f5';
}
parentBottomBanner.appendChild(bannerParentStars);
const suivieButton = document.createElement('div');
suivieButton.classList.add('suivieButtonadd');
suivieButton.innerHTML += '<span class="material-symbols-outlined">heart_plus</span>';
parentBottomBanner.appendChild(suivieButton);
document.body.appendChild(banner);
document.getElementById('show').style.width = '85%';
document.getElementById('show').style.marginRight = '15%';
bannerClose.addEventListener('click', function () {
document.body.removeChild(banner);
document.getElementById('show').style.width = '100%';
document.getElementById('show').style.marginRight = '0';
});

if (banner.offsetHeight >= window.innerHeight) {
banner.style.borderTopLeftRadius = '0';
} else {
banner.style.borderTopLeftRadius = '15px';
}
}
	</script>

{% endblock %}
